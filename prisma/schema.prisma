// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
  SUPPORT
}

enum RequestStatus {
  PENDING
  IN_ANALYSIS
  COMPLETED
}

enum RequestType {
  EVALUATION_APPROVAL
  START_DATE_CHANGE
  WITHDRAWAL
  PLATFORM_ISSUE
  GENERAL
}


model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  document      String    @unique
  password      String
  phone         String?
  address       String?
  zipCode       String?
  firstAccess   Boolean   @default(true)
  resetToken       String?
  resetTokenExpiry DateTime?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  evaluations   Evaluation[]
  requests      Request[]
}

model Evaluation {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  plan        String    // Plano escolhido
  platform    String    // Plataforma
  status      String    // Status da avaliação
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Request {
  id          String      @id @default(cuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  type        RequestType
  status      RequestStatus @default(PENDING)
  description String       @db.Text
  responses   RequestResponse[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model RequestResponse {
  id          String    @id @default(cuid())
  requestId   String
  request     Request   @relation(fields: [requestId], references: [id])
  message     String    @db.Text
  isFromAdmin Boolean   @default(false)
  createdAt   DateTime  @default(now())
}
